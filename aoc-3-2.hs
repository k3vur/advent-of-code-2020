input :: String
input = "..#......###....#...##..#.#....\n\
\.#.#.....#.##.....###...##...##\n\
\..#.#..#...........#.#..#......\n\
\..#......#..........###........\n\
\...#..###..##.#..#.......##..##\n\
\......#.#.##...#...#....###....\n\
\..........##.....##..##......#.\n\
\......#...........#............\n\
\#....#..........#..............\n\
\.#........##.............###.##\n\
\....#.........#.......#.#....##\n\
\#.#..#..#..#.......#...#....##.\n\
\.#........#......#.##.......#..\n\
\..#.....#####.....#....#..#..##\n\
\.......#..##.......#......#.###\n\
\..#.#...#......#.##...#........\n\
\##...................#...##..#.\n\
\......#...#.##...##.#......#..#\n\
\.#.................#..##...#...\n\
\...#.....#.......##.....#.#....\n\
\.......#.#......#.....#..#..##.\n\
\..........#........#...........\n\
\..#.#..........................\n\
\.#.##..#.#...#...#.........#...\n\
\.....#....#.....#..#.....#.....\n\
\...#.#.#.....#.#..#.......#..#.\n\
\.....#...###...##...#......##..\n\
\#.###......#.#...#.#.#..###....\n\
\#.....#..##......#..........#.#\n\
\#...............#........#.#..#\n\
\.....#..#.........#......##.#..\n\
\.....#.##.##..#..##............\n\
\...#......##...............#.#.\n\
\.#..#.#............##.#........\n\
\#.....#..###.............##.#..\n\
\...##..#.#..#...........#..#...\n\
\#....#.........#.#.............\n\
\##.#.........#..###......#.#..#\n\
\...#...#......#.#.#.##..#.##...\n\
\.....##............#.##.##..#..\n\
\....#................#.##..#..#\n\
\...#..#.......#...#..#........#\n\
\....#...#...#................#.\n\
\....##...............#.#...#...\n\
\.#.....###...#.......#.##......\n\
\....######.#..............###.#\n\
\.#..#.........##...............\n\
\................##.#..#....###.\n\
\.......#............#.#..#..#..\n\
\......#.#...............##.#...\n\
\...#..####.#...#..#..#......#..\n\
\....#.#...#.....#.........#..##\n\
\.##..#...#......##....##.#.#...\n\
\.##.#.........##...#....#......\n\
\..#.#..#...#.#..#.......#...#.#\n\
\.........#..#.....##..#........\n\
\..#......#..##.....#..#...###..\n\
\..#...#....#.#..#..#.#.#..#.#..\n\
\...#..#####.....#......#.......\n\
\#.#............#......#..#...#.\n\
\.........#..........###.......#\n\
\......#....#..#.##.#......#..#.\n\
\...........##.#....#.#..#......\n\
\..#...................#..#.#...\n\
\#....##.............##....#...#\n\
\##..#....#.........#..........#\n\
\....#.#.#...#..#........#.##..#\n\
\...............#...#..##..#....\n\
\.##.......#.......#...........#\n\
\#.........................##...\n\
\#........#.#..#..##..####.#....\n\
\...................##.....###..\n\
\.#.......#..#......#......#...#\n\
\..#.........#...#..........#...\n\
\..........#......#....#........\n\
\.#......#..#...#..#...##....##.\n\
\...#.#..#..#......#.....##.####\n\
\.......#.#....#.......#........\n\
\#...#.#...##..##.#......#......\n\
\.#.........#...................\n\
\...#..........#.#......#.......\n\
\...#.....##....#..........#....\n\
\.#..........##..#..#..##....#.#\n\
\.##.#..........#...#.##.......#\n\
\#...###....#..#.#...#..#.......\n\
\..................##...........\n\
\..#...##.#...........#....#.##.\n\
\..#......#..##..#....##..#...#.\n\
\..#....#.....#.##..#.......#..#\n\
\#...#....#..#.#....#......##...\n\
\.......##..#..........#........\n\
\..#.............##.#.....#...#.\n\
\...............#....#...#...##.\n\
\##...........#.......#.##......\n\
\#..#...........#.........#.....\n\
\....###.............###.##..##.\n\
\.........#.#.....###.......#...\n\
\..#.##....#.#..........#....#..\n\
\#........#....##...#..#........\n\
\......#..........###..#.#......\n\
\.....#.#......##.....#..##...#.\n\
\.#.......#......#...#...#...#.#\n\
\.#..........##.......#.....##.#\n\
\###.#...#....#.....#...#......#\n\
\..#.#.#..#.##.#..#.............\n\
\.....#.........................\n\
\.#..###..#...#...#..#..#...#.#.\n\
\#................##...##.##....\n\
\......#...#...#..........#...#.\n\
\..........#.....##.............\n\
\..#.#......#........#.......#..\n\
\........##.............#.......\n\
\.......#......#.##.#..#........\n\
\#.#.#....#........#..........#.\n\
\##..##......#..#..#.....#.#..##\n\
\##..#..........#...............\n\
\#.....##...#.#......#.......#.#\n\
\#.....#...#....#..#.....##.....\n\
\##..........#.#.....#....#...##\n\
\..##.###..#.....#.......#...#..\n\
\.#.#.......#......###........#.\n\
\.#..............#.#..###.......\n\
\.#....#..##.........#..#.#.....\n\
\....#....#.#....#..#.......##.#\n\
\#.......#.......#.........#....\n\
\...#....#....#.....##..#..#.#.#\n\
\........#....#...........#.....\n\
\.#......##.#.#.##..............\n\
\#..#.#.....##........#........#\n\
\##...#.#.......##.......#...#..\n\
\#...#.....#.##...##.#.....#....\n\
\....#..##...#........#.#...#...\n\
\...#....#.#.#..###...##.#.....#\n\
\......#..#.....#..#........##..\n\
\.......#.....#.#.........#.#..#\n\
\..#.......#.#.#.#.#....#.##...#\n\
\.#...#........#..##..#......#..\n\
\.#..#............#...#..#.#....\n\
\...##......#......#............\n\
\..#...#.#.....#.....#..##.#....\n\
\.#......#.#......#..#.#........\n\
\..#..........##...#.#.....#..#.\n\
\#...#.....#..#...#.............\n\
\..##.................#....#....\n\
\.#....#.......#..##....#......#\n\
\.#....###............##....##.#\n\
\##..#........#..#...#.......#..\n\
\.....#.....#.#.#.##.........#..\n\
\.......#..#....#...#...#.......\n\
\...#...#...#.#.#..#.#.....#....\n\
\#.#........#..#.##..#..###.....\n\
\..................#..#.........\n\
\#.#.....#..##.........#.......#\n\
\###..#.......#..............#..\n\
\......#..#.....###..........#..\n\
\....#.#...#..#...........#.#...\n\
\...#.....#.......#.....#.#.....\n\
\#.....##..#......##...........#\n\
\#...###...........##..#...#.##.\n\
\......##.##.#...#..#....#......\n\
\...#.#......##.#......##....#.#\n\
\..............#.#.###.......#..\n\
\........#....#.......##..#..###\n\
\...#.....##.#....#......##..#.#\n\
\..##........#.....#.#..#...#...\n\
\.#..#.##.........#.....#...#..#\n\
\..#..#....#...........#........\n\
\.#...#....................#....\n\
\##.....##....#.............#.#.\n\
\....#.#..#.#..#.#.#..........##\n\
\.............##.#.....#..#..#..\n\
\.#....#.....##...#.###.........\n\
\..#........#........#.#..###...\n\
\.##....#...#...#.......#...#.#.\n\
\..#...#...#..##........#..#....\n\
\..##.#..#..#.....#......#.#..#.\n\
\.#........#..#....#..#.........\n\
\..#.#.....#.##..#........###.#.\n\
\.....#.##.....##.#.............\n\
\#.........#.......#...##...#...\n\
\..#.##.#..#..#............#....\n\
\.##....#..#............#.....#.\n\
\###........##.....##.#...#.....\n\
\#......##..##.#.#.#.#.#.#..##..\n\
\.....###.....#....#......#....#\n\
\........#.........##...#....#.#\n\
\.#.#.....#.#..#..##......#...#.\n\
\...#.##....#..#.###..#..##.....\n\
\....#..........##..#..#..#..#..\n\
\...#..#.##..#..#....#.........#\n\
\.....#..###.#.....#.....#..#...\n\
\......#...#....#.##...#.#......\n\
\.#.###..##.....##.##......##...\n\
\.....#.#...........#.#.........\n\
\#........#...#..#......##.#....\n\
\..#.......##....##....#.##.#..#\n\
\...###.#.........#......#.....#\n\
\..#.##..#....#.....##...#.##...\n\
\....##.##.............#...#....\n\
\##..#...#..#..#..#.............\n\
\.....#.....#.....#.............\n\
\...#.##.......#..#.#.....#....#\n\
\#.....##.........#......##.....\n\
\.....##..........#..#...#..#...\n\
\#...###....#.......#...##......\n\
\.#....#..#......#.....#...#.#..\n\
\#........#.#.#...#.....###.#.##\n\
\##...#...##..#..#....#.........\n\
\....#............#..#.....#....\n\
\#......#.........##....#.......\n\
\.#..#..#........#.............#\n\
\.##..........#......#.......#..\n\
\#............#..#....#.........\n\
\....#.#.....#.##...#.....#.#...\n\
\...#.#..#...##..#...#.#.#......\n\
\#....#..#.........##..#.#.#..##\n\
\.#...#..............#.......#..\n\
\#...#.....#.#........##......##\n\
\...#....##.####.#.........#.#.#\n\
\....###.#..#............#.#..#.\n\
\....#......#...#......##.#.#.#.\n\
\.....#..#.#.##.#...##..........\n\
\##..#...#.#...###.............#\n\
\....#...#..#.....#.#..#..#..#..\n\
\#..........####......#.....###.\n\
\.........#........#.##.#...#...\n\
\.........#..........#.#..###...\n\
\.....##........##.........#...#\n\
\..##....#...#.......##.........\n\
\.....#.#......##....#...#...#..\n\
\.##..#..##.....................\n\
\.......#...#..#..#...##....#...\n\
\.#...#.......###...#..#..#.....\n\
\.......#.....##.##.#.......#..#\n\
\.##......#...#....#..#......##.\n\
\.##....#..#....#...#...#.......\n\
\.........##..#..#.#.#.....##...\n\
\...#..............#..#.....####\n\
\.#.#.#..#.......#.......#......\n\
\..#.#......#..........#........\n\
\.#...#.#..#.......#..#..#..#...\n\
\.......##.#...#..#....#.....#..\n\
\.##...##....##...#........####.\n\
\....#.#..##....#...#....#.#....\n\
\.....#.....#..#..#.#.##..#.....\n\
\..#....#..............#....#...\n\
\..#.#.#.....##.#.....#..##.....\n\
\....#.....#....#...#...#..#.#..\n\
\#...#...........#..#..#........\n\
\...#.#..#.........##.#...#..##.\n\
\......#.#.........#.#...#......\n\
\......#..##.###......##.#....#.\n\
\.....#...#..#.......#..........\n\
\.#...#.......#.....###......#..\n\
\...........##.....#..#..#....#.\n\
\..#....#..#...#......#.......#.\n\
\..#...#...#.#..#....#...#......\n\
\.......#....###.####...###.#...\n\
\#.##.#.......#.......#....#.#.#\n\
\.##..........#.....#..###......\n\
\.....#...........#.##..#....#..\n\
\........##.....#.#........##...\n\
\#..#..#..................##....\n\
\#...###..........#.............\n\
\.......#.#.......#.#.......##..\n\
\.....#.#...#....#...####.....#.\n\
\..##.....##.......#....#.......\n\
\##..........#...#..##....##....\n\
\..........#..#......#........#.\n\
\##..#....#..#....#.....##....#.\n\
\##.##.....#...##.##.......#....\n\
\..#..#.###.#..##.#..#..#...#...\n\
\.#..#.....#........#...##.#....\n\
\..#..#.....#.#......##.#.#.....\n\
\.#..##...#.#....#...#...#.#.##.\n\
\.........#...#....###.#.....#..\n\
\...........###.#.#..#..#...#.#.\n\
\##...#......##...........#..#..\n\
\.........##..#...#.......#.....\n\
\#......#.#..........#..#.......\n\
\...#.................#....#....\n\
\#....#......................##.\n\
\##.......#..#......#.#...###.#.\n\
\..#....#..#.#......#...........\n\
\...#...........###.#.#.........\n\
\..#..##.....#.....##...##......\n\
\..#..#.#.#.#..#..#..##....#...#\n\
\#......##.....##..##.##...#....\n\
\#.....#.....#.#........#.......\n\
\.#.....#.................#....#\n\
\.###....#...#............#.#.#.\n\
\.#...#.#......#.#..............\n\
\....#...#......#.....#.......#.\n\
\........#.....#..........#....#\n\
\#..#......#...#...#.........#..\n\
\#....#......#...##.#...#...#...\n\
\#...#....#....#..#..#.....#..#.\n\
\#......##..#..#.#.#..#.#.......\n\
\..#..#...............#...##...#\n\
\............#..............#.##\n\
\.#.#.#......##.......#.......#.\n\
\....#.........##.......#...###.\n\
\.......#.#...#.#.#.......#.....\n\
\....#..#..#...#....#.##.#.##...\n\
\...##.##.#...#......#..........\n\
\#.....#...#.#...#.##..##.#.....\n\
\.......#.....#...#.#...##.#....\n\
\.#.............#.....#....##..#\n\
\##......#.......#...#....#.....\n\
\.###......#.................#..\n\
\#.#......##.........##..#......\n\
\...#....#..........#.#.........\n\
\..##..#.........#..............\n\
\.....#...#..................#.#\n\
\.............#.........#...#..#\n\
\....#....#......#.#.......#...#\n\
\#..#............#.#.......#...#\n\
\..#.....#............#.........\n\
\.#.....................###....#\n\
\........#.####.........#.#.#...\n\
\#...........##...#.........#..#\n\
\...........#..#......#...#.#...\n\
\....##...##.....#.....#........"

type Row = String
type Map = [Row]
type Slope = (Int, Int)

isTree :: Slope -> Int -> Row -> Bool
isTree (slopeX, slopeY) rowIndex row = isValidRow && isTree
  where isValidRow = (mod rowIndex slopeY) == 0
        isTree = (row !! index) == '#'
        index = mod (slopeX * rowIndex) (length row)

calculateTrees :: Slope -> Map -> Int
calculateTrees slope treeMap = length treeRows 
  where treeRows = filter (\(rowIndex, row) -> isTree slope rowIndex row) indexedTreeMap
        indexedTreeMap = zip [0..] treeMap

calculateResult :: [Slope] -> String -> Int
calculateResult slopes input = foldl (*) 1 (map calculateTrees' slopes)
  where treeMap = lines input
        calculateTrees' = (flip calculateTrees) treeMap

result :: Int
result = calculateResult [(1, 1), (3, 1), (5, 1), (7, 1), (1, 2)] input
